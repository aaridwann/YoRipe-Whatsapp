// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Options Menu Should render with correct props 1`] = `
<View
  collapsable={false}
  style={
    {
      "alignContent": "center",
      "backgroundColor": "#075e55",
      "borderRadius": 5,
      "elevation": 4,
      "justifyContent": "center",
      "opacity": 0,
      "padding": 16,
      "shadowColor": "#000000",
      "shadowOffset": {
        "height": 2,
        "width": 0,
      },
      "shadowOpacity": 0.3,
      "shadowRadius": 2,
      "transform": [
        {
          "translateX": 500,
        },
      ],
    }
  }
>
  <View
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": undefined,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      {
        "opacity": 1,
      }
    }
  >
    <Text
      style={
        {
          "color": "#ffffff",
          "fontSize": 26,
          "fontWeight": "600",
          "margin": 16,
        }
      }
    >
      setting
    </Text>
  </View>
  <View
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": undefined,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      {
        "opacity": 1,
      }
    }
  >
    <Text
      style={
        {
          "color": "#ffffff",
          "fontSize": 26,
          "fontWeight": "600",
          "margin": 16,
        }
      }
    >
      profile
    </Text>
  </View>
</View>
`;
