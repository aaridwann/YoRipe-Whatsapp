// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Searching navbar  Should render with correct props 1`] = `
<View
  accessibilityLabel="Navbar_Searching"
  collapsable={false}
  style={
    {
      "backgroundColor": "#054c44",
      "borderRadius": 20,
      "flexDirection": "row",
      "opacity": 0,
      "padding": 5,
      "transform": [
        {
          "translateY": -800,
        },
      ],
      "width": "100%",
    }
  }
>
  <View
    style={
      {
        "alignItems": "center",
        "flexDirection": "row",
        "justifyContent": "center",
      }
    }
  >
    <View
      accessibilityLabel="Navbar_Searching_Back_Button"
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "marginHorizontal": 16,
          "opacity": 1,
        }
      }
    >
      IonIcons
    </View>
    <View
      style={
        {
          "borderRadius": 8,
          "minWidth": 520,
          "padding": 12,
        }
      }
    >
      <TextInput
        accessibilityLabel="Navbar_Searching_Input"
        onChangeText={[Function]}
        placeholder="Find a message"
        placeholderTextColor="white"
        style={
          {
            "color": "#ffffff",
          }
        }
      />
    </View>
  </View>
  <View
    style={
      {
        "alignItems": "center",
        "flexDirection": "row",
        "justifyContent": "center",
      }
    }
  >
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={false}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "marginHorizontal": 16,
          "opacity": 1,
        }
      }
    >
      IonIcons
    </View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={false}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "marginHorizontal": 16,
          "opacity": 1,
        }
      }
    >
      IonIcons
    </View>
  </View>
</View>
`;
